{"version":3,"sources":["Components/Form.js","Components/Navbar.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","text","setText","style","color","mode","heading","className","id","value","onChange","e","console","log","target","backgroundColor","rows","placeholder","onClick","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Navbar","href","title","type","toggleMode","for","Alert","alert","role","word","lower","charAt","slice","capital","msg","App","setAlert","message","setTimeout","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a0bc16df.chunk.js","sourcesContent":["//rfc\r\nimport React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function Form(props) {\r\n\r\n\r\nconst handleUpClick = ()=>{\r\n    console.log(\"Upper case was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Done Upper text\",\"sucess\");\r\n};\r\nconst handleLoClick = ()=>{\r\n    console.log(\"Lower case was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Done LowerCase\",\"sucess\");\r\n};\r\n\r\nconst ClearText = ()=>{\r\n    console.log(\"Upper case was clicked\" + text);\r\n    let newText = \"\"\r\n    setText(newText);\r\n    props.showAlert(\"Cleared text\",\"sucess\");\r\n};\r\nconst handleOnChange = (e)=>{\r\n    console.log(\"On change\");\r\n    setText(e.target.value);\r\n};\r\n\r\nconst handleCoppy=()=>{\r\n    console.log(\"I am coppy\");\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Coppied to clipboard\",\"sucess\");\r\n};\r\n\r\n\r\nconst handleExtraSpaces=()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces has been removed\",\"sucess\");\r\n};\r\n\r\n\r\n\r\n    const [text,setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div style={{color : props.mode === \"dark\"?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n<div className=\"mb-3 container\">\r\n  <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode === \"dark\"?'grey':'white',color:  props.mode === \"dark\"?'white':'#042743'}} rows=\"8\" placeholder=\"Enter the text\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to upperCase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLoClick} >Convert to lowerCase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleCoppy} >coppy text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces} >Remove extra spaces</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={ClearText} >Clear text</button>\r\n</div>\r\n\r\n<hr />\r\n\r\n<div className=\"container my-2\" style={{color : props.mode === \"dark\"?'white':'#042743'}}>\r\n<h1>Your text summary</h1>\r\n<p>{text.split(\" \").length} words and {text.length} characters</p>\r\n<p>{0.008*text.split(\" \").length} minutes read</p>\r\n<hr />\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Enter something in the text box above to preview it here\"}</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode === \"light\"?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">EnableDarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n\r\nconst capital = (word)=>{\r\nconst lower = word.toLowerCase();\r\nreturn lower.charAt(0).toUpperCase() + lower.slice(1);\r\n};\r\n\r\n\r\n    return (props.alert &&\r\n        <div className={`alert alert-success  alert-dismissible fade show`} role=\"alert\">\r\n            <strong> {capital(props.alert.type)}</strong> :  {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './Components/About';\nimport Form from './Components/Form';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n\nconst [alert, setAlert] = useState(null);    //Alert is aobject. \n\nconst showAlert =(message,type)=>{\nsetAlert({\n  msg:message,\n  type:type\n});\n\nsetTimeout(() => {\n  setAlert(null);\n}, 2000);\n\n};\n\nconst [mode, setMode] = useState(\"light\");\n\nconst toggleMode = ()=>{\n  if (mode === \"light\") {\n    setMode (\"dark\");\n    document.body.style.backgroundColor = '#042743'\n    showAlert(\"Dark mode has been enabled\",\"sucess\");\n    \n  } else {\n    setMode( \"light\");\n    document.body.style.backgroundColor = 'white'\n    showAlert(\"Light mode has been enabled\",\"sucess\");\n    \n  }\n\n}\n\n\n\n\n\n\n\n  return (\n<>\n{/* <Router> */}\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          </Route>\n        </Switch> */}\n{/* <hr /> */}\n          <Form heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n\n\n\n</div>\n{/* </Router> */}\n</>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}